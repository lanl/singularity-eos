default:
  interruptible: true
  before_script:
   - unset CI_MERGE_REQUEST_DESCRIPTION
   - unset CI_MERGE_REQUEST_TITLE

.ascgit_job:
  id_tokens:
    SITE_ID_TOKEN:
      aud: https://asc-git.lanl.gov

.darwin_job:
  variables:
    CLUSTER: darwin
    SCHEDULER_PARAMETERS: "-N 1 --qos=debug -p general,skylake-gold,skylake-platinum --constraint=\"(cpu_family:skylake)&ib:edr\""
  tags:
    - darwin-slurm-shared

.darwin_regular_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.darwin_regular_mr_only_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_TAG
      when: never
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "web"

.darwin_regular_default_branch_only_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"

.darwin_nightly_job:
  variables:
    CTEST_MODE: Nightly
  rules:
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /darwin/ && $CI_MERGE_REQUEST_LABELS =~ /nightly/

.rocinante_job:
  variables:
    CLUSTER: rocinante
    SCHEDULER_PARAMETERS: "-N 1 -A asc-ci -p ci --reservation ci --time=02:00:00"
  tags:
    - rocinante
    - batch

.rocinante_regular_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /rocinante/ && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.venado_job:
  variables:
    CLUSTER: venado
    SCHEDULER_PARAMETERS: "-N 1 -A asc-ci_g -p ci_g --qos ci_g --reservation ci_g --time=02:00:00"
  tags:
    - venado
    - batch

.venado_shell_gpu_job:
  variables:
    CLUSTER: venado
  tags:
    - venado
    - shell
    - gpu

.venado_regular_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /venado/ && $GITLAB_USER_LOGIN =~ $VENADO_USERS && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /venado/ && $GITLAB_USER_LOGIN =~ $VENADO_USERS && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /venado/ && $GITLAB_USER_LOGIN =~ $VENADO_USERS && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /venado/ && $GITLAB_USER_LOGIN =~ $VENADO_USERS && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.rzansel_job:
  tags:
   - rzansel
   - batch
  variables:
    CLUSTER: rzansel
    LLNL_LSF_SCHEDULER_PARAMETERS: "--nnodes=1"
    CUSTOM_CI_BUILDS_DIR: "/usr/workspace/$$USER/xcap-gitlab-ci"

.rzansel_regular_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /rzansel/ && $GITLAB_USER_LOGIN =~ $RZANSEL_USERS && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /rzansel/ && $GITLAB_USER_LOGIN =~ $RZANSEL_USERS && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /rzansel/ && $GITLAB_USER_LOGIN =~ $RZANSEL_USERS && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /rzansel/ && $GITLAB_USER_LOGIN =~ $RZANSEL_USERS && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.rzvernal_job:
  tags:
   - rzvernal
   - batch
   - flux
  variables:
    CLUSTER: rzvernal
    LLNL_FLUX_SCHEDULER_PARAMETERS: "-N=1 --time-limit=2h"
    CUSTOM_CI_BUILDS_DIR: "/usr/workspace/$$USER/xcap-gitlab-ci"

.rzvernal_regular_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /rzvernal/ && $GITLAB_USER_LOGIN =~ $RZVERNAL_USERS && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /rzvernal/ && $GITLAB_USER_LOGIN =~ $RZVERNAL_USERS && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /rzvernal/ && $GITLAB_USER_LOGIN =~ $RZVERNAL_USERS && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /rzvernal/ && $GITLAB_USER_LOGIN =~ $RZVERNAL_USERS && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.rzadams_job:
  tags:
   - rzadams
   - batch
   - flux
  variables:
    CLUSTER: rzadams
    LLNL_FLUX_SCHEDULER_PARAMETERS: "-N=1 --time-limit=2h"
    CUSTOM_CI_BUILDS_DIR: "/usr/workspace/$$USER/xcap-gitlab-ci"

.rzadams_regular_job:
  variables:
    CTEST_MODE: Continuous
  rules:
    - if: $ENABLED_CLUSTERS =~ /rzadams/ && $GITLAB_USER_LOGIN =~ $RZADAMS_USERS && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $ENABLED_CLUSTERS =~ /rzadams/ && $GITLAB_USER_LOGIN =~ $RZADAMS_USERS && $CI_PIPELINE_SOURCE == "schedule"
    - if: $ENABLED_CLUSTERS =~ /rzadams/ && $GITLAB_USER_LOGIN =~ $RZADAMS_USERS && $CI_PIPELINE_SOURCE == "web"
    - if: $ENABLED_CLUSTERS =~ /rzadams/ && $GITLAB_USER_LOGIN =~ $RZADAMS_USERS && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.build_and_test:
  stage: build_n_test
  variables:
    SUBMIT_TO_CDASH: false
    SUBMIT_AFTER: false
    CREATE_SUBMIT_ARTIFACT: false
    TEST_TARFILE: "${CLUSTER}-${CTEST_MODE}-${SPACK_ENV_NAME}.tar.gz"
  script:
    - source .gitlab/build_and_test.sh ${CLUSTER} ${SPACK_ENV_NAME}
  after_script:
    - touch ${TEST_TARFILE}
    - |
      if ${SUBMIT_AFTER}; then
        export SOURCE_DIR=$PWD
        export BUILD_DIR=build
        export SYSTEM_NAME=${CLUSTER}
        ctest -V -S .gitlab/build_and_test.cmake,Submit
      elif ${CREATE_SUBMIT_ARTIFACT}; then
        rm -f ${TEST_TARFILE}
        cd build
        tar cvzf ../${TEST_TARFILE} DartConfiguration.tcl Testing
      fi
  artifacts:
    when: always
    expire_in: 2 weeks
    paths:
      - ${CI_PROJECT_DIR}/build/tests.xml
      - ${CI_PROJECT_DIR}/${TEST_TARFILE}
    reports:
      junit: ${CI_PROJECT_DIR}/build/tests.xml

.build_docs:
  stage: static_analysis
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
   - git fetch --prune --prune-tags
   - git fetch --tags
   - if [[ ${CI_JOB_NAME%%:*} =~ "pages_check" ]]; then git tag ${CI_JOB_NAME%%:*}; fi
   - source .gitlab/build_docs.sh ${CLUSTER}
   - rm -rf public
   - mv build/doc/html public
   - if [[ ${CI_JOB_NAME%%:*} =~ "pages_check" ]]; then git tag -d ${CI_JOB_NAME%%:*}; fi

.clang_format:
  stage: static_analysis
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
    - source .gitlab/check_format.sh ${CLUSTER}

.post_results_to_cdash:
  stage: build_n_test
  id_tokens:
    SITE_ID_TOKEN:
      aud: https://asc-git.lanl.gov
  variables:
    GIT_SUBMODULE_STRATEGY: none
  script:
    - module load cmake
    - cmake --version
    - ls *.tar.gz
    - export SOURCE_DIR=$PWD
    - export BUILD_DIR=build
    - |
      for t in $(ls *.tar.gz); do
        export SYSTEM_NAME=$(echo $t | cut -d - -f 1)
        export CTEST_MODE=$(echo $t | cut -d - -f 2)
        FULL_NAME=${t%%.*}
        export SPACK_ENV_NAME=${FULL_NAME/${SYSTEM_NAME}-${CTEST_MODE}-/}
        mkdir -p ${BUILD_DIR}
        cd ${BUILD_DIR}
        echo "#############################################################################"
        echo "Submitting result for ${CTEST_MODE} with ${SPACK_ENV_NAME} on ${SYSTEM_NAME}"
        echo "#############################################################################"
        tar xvzf ../$t
        cd ${CI_PROJECT_DIR}
        ctest -V -S .gitlab/build_and_test.cmake,Submit
        rm -rf ${BUILD_DIR}
      done
