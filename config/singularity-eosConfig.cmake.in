# ------------------------------------------------------------------------------#
# Â© 2021-2023. Triad National Security, LLC. All rights reserved.  This program
# was produced under U.S. Government contract 89233218CNA000001 for Los Alamos
# National Laboratory (LANL), which is operated by Triad National Security, LLC
# for the U.S.  Department of Energy/National Nuclear Security Administration.
# All rights in the program are reserved by Triad National Security, LLC, and
# the U.S. Department of Energy/National Nuclear Security Administration. The
# Government is granted for itself and others acting on its behalf a
# nonexclusive, paid-up, irrevocable worldwide license in this material to
# reproduce, prepare derivative works, distribute copies to the public, perform
# publicly and display publicly, and to permit others to do so.
# ------------------------------------------------------------------------------#

# ------------------------------------------------------------------------------#
# singularity-eos options
# ------------------------------------------------------------------------------#

@SINGULARITY_EOS_CONFIG_CODE@

# ------------------------------------------------------------------------------#
# add singularity-eos cmake files
# ------------------------------------------------------------------------------#
if(NOT SINGULARITY_EOS_CMAKE)
  message(
    STATUS "Found singularity-eos CMake Modules (appending CMAKE_MODULE_PATH): "
           ${CMAKE_CURRENT_LIST_DIR})
  list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
  set(SINGULARITY_EOS_CMAKE TRUE)
endif()

# ------------------------------------------------------------------------------#
# check for selected components
# ------------------------------------------------------------------------------#
if(${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
  set(${CMAKE_FIND_PACKAGE_NAME}_known_components Interface Library)
  foreach(comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
    if(NOT comp IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_known_components)
      set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "singularity-eos unknown component: ${comp}")
      set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
      return()
    endif()
  endforeach()
  set(${CMAKE_FIND_PACKAGE_NAME}_comps ${${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS})
else()
  set(${CMAKE_FIND_PACKAGE_NAME}_comps Interface Library)
endif()

foreach(comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_comps)
  if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_${comp} AND NOT EXISTS ${CMAKE_CURRENT_LIST_DIR}/singularity-eos_${comp}.cmake)
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "singularity-eos missing required component: ${comp}")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
  endif()
endforeach()


# ------------------------------------------------------------------------------#
# library dependencies
# ------------------------------------------------------------------------------#

include(CMakeFindDependencyMacro)

# header-only dependencies
if("Interface" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_comps)
  find_dependency(ports-of-call)
  find_dependency(mpark_variant)
endif()

if(@SINGULARITY_USE_SPINER@)
  find_dependency(spiner)
endif()

if(@SINGULARITY_USE_SPINER_WITH_HDF5@)
  find_dependency(HDF5 COMPONENTS C HL)
  set(SPINER_USE_HDF ON)
endif()

if(@SINGULARITY_USE_SPINER_WITH_PARALLEL_HDF5@)
  # do i need enable_language here?
  find_dependency(MPI COMPONENTS C CXX)
endif()

if(@SINGULARITY_USE_KOKKOS@)
  find_dependency(Kokkos)
endif()

if(@SINGULARITY_USE_KOKKOSKERNELS@)
  find_dependency(KokkosKernels)
endif()

if(@SINGULARITY_USE_EIGEN@)
  find_dependency(Eigen3)
endif()

if(@SINGULARITY_USE_EOSPAC@)
  # needed for EOSPAC
  if(NOT TARGET EOSPAC::eospac)
    find_dependency(EOSPAC)
  endif()
endif()

include(${CMAKE_CURRENT_LIST_DIR}/singularity-eos_Common.cmake)

foreach(comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_comps)
  include(${CMAKE_CURRENT_LIST_DIR}/singularity-eos_${comp}.cmake OPTIONAL)
endforeach()

# ------------------------------------------------------------------------------#
# singularity-eos convenience target
# ------------------------------------------------------------------------------#
if(NOT TARGET singularity-eos AND NOT singularity-eos_BINARY_DIR)
  add_library(singularity-eos INTERFACE)
  add_library(singularity-eos::singularity-eos ALIAS singularity-eos)

  if("Interface" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_comps)
    target_link_libraries(singularity-eos INTERFACE singularity-eos::singularity-eos_Interface)
  endif()

  if("Library" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_comps)
    target_link_libraries(singularity-eos INTERFACE singularity-eos::singularity-eos_Library)
  endif()
endif()
