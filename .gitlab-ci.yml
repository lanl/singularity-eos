variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  SPACK_REF: "v0.16.3"
  SINGULARITY_EOS_GCC_VERSION: "9.3.0"
  SCHEDULER_PARAMETERS: "--nodes=1 --partition=skylake-gold,skylake-platinum"

.job:
  tags:
    - darwin-slurm-shared
  only:
    refs:
      - master
      - merge_requests
  except:
    refs:
      - schedules

before_script:
  - export HOME=${CI_PROJECT_DIR}
  - export TMPDIR=${CI_PROJECT_DIR}
  - export DATADIR=${CI_DATA_DIR}
  - cd ${CI_PROJECT_DIR}
  - unset SPACK_ROOT
  - git clone https://github.com/spack/spack.git
  - cd spack && git checkout ${SPACK_REF##*-} && cd ${CI_PROJECT_DIR}
  - source ${CI_PROJECT_DIR}/spack/share/spack/setup-env.sh
  - module load gcc/${SINGULARITY_EOS_GCC_VERSION}
  - spack compiler find
  - spack compiler list
  - spack repo add --scope site ${CI_PROJECT_DIR}/spack-repo
  - spack repo list
  - |
    printf "modules:\n  tcl:\n    verbose: True\n    naming_scheme: '{name}/{version}-{compiler.name}-{compiler.version}'\n    all:\n      autoload: 'direct'\n      conflict:\n        - '{name}'" > ${CI_PROJECT_DIR}/spack/etc/spack/modules.yaml
  - mkdir -p ${CI_PROJECT_DIR}/spack_env
  - spack env create --without-view -d ${CI_PROJECT_DIR}/spack_env
  - spack env activate -d ${CI_PROJECT_DIR}/spack_env
  - spack install --no-checksum --show-log-on-error singularity-eos_deps%gcc@${SINGULARITY_EOS_GCC_VERSION}
  - source ${CI_PROJECT_DIR}/spack/share/spack/setup-env.sh
  - spack module tcl refresh -y
  - spack env loads -r
  - export modName="${CI_PROJECT_DIR}/spack_env/loads"
  - sed -i "1s;^;module load gcc/${SINGULARITY_EOS_GCC_VERSION}\n;" ${modName}
  - sed -i "1s;^;#%Module\n;" ${modName}
  - module use ${CI_PROJECT_DIR}/spack_env
  - module load loads # module load compiler, deps, etc.
  # singularity-eos-data is in /projects/xcap/ec/singularity-eos-data
  #- eval $(ssh-agent -s)
  #- echo "$SSH_PRIVATE_KEY_PC" | tr -d '\r' | ssh-add -
  #- echo "$SSH_PRIVATE_KEY_SP" | tr -d '\r' | ssh-add -
  #- echo "$SSH_PRIVATE_KEY_DATA" | tr -d '\r' | ssh-add -
  #- mkdir -p ~/.ssh
  #- chmod 700 ~/.ssh
  #- ssh-keyscan gitlab.lanl.gov >> ~/.ssh/known_hosts
  #- chmod 644 ~/.ssh/known_hosts
  #- git config --global user.email "singularity-eos@lanl.gov"
  #- git config --global user.name "singularity-eos"
  #- git lfs install
  #- git clone git@gitlab.lanl.gov:singularity/singularity-eos-data.git

install_singularity-eos_fort:
  extends:
    - .job
  script:
    - export TARGET_DIR=${HOME}/install/fort
    - mkdir -p ${TARGET_DIR}
    - mkdir -p build && cd build
    - cmake -DSINGULARITY_BUILD_SESAME2SPINER=ON -DCMAKE_INSTALL_PREFIX=${TARGET_DIR} ..
    - make -j
    - make install

install_singularity-eos_nofort:
  extends:
    - .job
  script:
    - export TARGET_DIR=${HOME}/install/nofort
    - mkdir -p ${TARGET_DIR}
    - mkdir -p build && cd build
    - cmake -DSINGULARITY_BUILD_STELLARCOLLAPSE2SPINER=ON -DCMAKE_INSTALL_PREFIX=${TARGET_DIR} -DSINGULARITY_USE_FORTRAN=OFF ..
    - make -j
    - make install

test_singularity-eos:
  extends:
    - .job
  script:
    - mkdir -p build
    - cd build
    - cmake -DSINGULARITY_BUILD_STELLARCOLLAPSE2SPINER=ON -DSINGULARITY_BUILD_TESTS=ON -DSINGULARITY_TEST_SESAME=ON -DSINGULARITY_TEST_STELLAR_COLLAPSE=ON -DSINGULARITY_TEST_DATA_DIR=${DATADIR} ..
    - make -j
    - make test
