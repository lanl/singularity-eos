#------------------------------------------------------------------------------
# Â© 2021-2023. Triad National Security, LLC. All rights reserved.  This
# program was produced under U.S. Government contract 89233218CNA000001
# for Los Alamos National Laboratory (LANL), which is operated by Triad
# National Security, LLC for the U.S.  Department of Energy/National
# Nuclear Security Administration. All rights in the program are
# reserved by Triad National Security, LLC, and the U.S. Department of
# Energy/National Nuclear Security Administration. The Government is
# granted for itself and others acting on its behalf a nonexclusive,
# paid-up, irrevocable worldwide license in this material to reproduce,
# prepare derivative works, distribute copies to the public, perform
# publicly and display publicly, and to permit others to do so.
#------------------------------------------------------------------------------

# Author: Jonah Miller (jonah.maxwell.miller@gmail.com)
# small script to plot timings generated by profile_eos.cpp

import numpy as np
from argparse import ArgumentParser
import matplotlib as mpl; mpl.use('Agg')
from matplotlib import pyplot as plt
from matplotlib import rc
rc('font',size=18)

parser = ArgumentParser(description="Plot output from profile_eos.cpp")
parser.add_argument('file',type=str,help='File to plot.')
parser.add_argument('-s','--save',type=str,
                    default=None,
                    help=('Prefix to save filename to. '
                          +'Saves png and pdf. '
                          +'Defaults to input file name.'))
args = parser.parse_args()
if args.save is not None:
    savename = args.save
else:
    savename = args.file

data = np.loadtxt(args.file)
ncells = data[:,0]
time_host = data[:,1]
throughput_host = data[:,2]
time_device = data[:,3]
throughput_device = data[:,4]

plt.loglog(ncells,throughput_host,
           linestyle='-',marker='o',
           label='node')
plt.plot(ncells,throughput_device,
         linestyle='--',marker="^",
         label='GPU')
plt.xlabel(r'$N^{1/3}$ for $N$ cells')
plt.ylabel("throughput\n(zone-cycles/device-s)")
plt.legend()
plt.title(r'Ideal Gas $P(\rho,T)$ Timings')
for postfix in ['.png','.pdf']:
    plt.savefig(savename + postfix,
                bbox_inches='tight')
